@using SwDocuments.ViewModels
@model SwDocuments.ViewModels.ViewModelDocumentFolder

    <div class="form-group">
    @Html.LabelFor(model => model.folderPath, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.folderPath, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.folderPath, "", new { @class = "text-danger" })
        <div style="display: inline-block;"><a id="btnfolderlookup" class="btn btn-xs">Lookup Folder</a></div>
    </div>
</div>
<div id="modalLookup" class="modal" style="background-color: rgba(50,50,50,0.3);">
    <div style="display: block;
                        position: absolute;
                        width: 420px;
                        height: 335px;
                        box-shadow: 10px 10px 10px black;
                        left: 50%;
                        top: 50%;
                        background-color: white;
                        padding: 20px;
                        transform: translate(-50%, -50%);">
        <h3>Lookup Folder Path</h3>
        <div style="position: absolute;
                            right: 20px;
                            top: 20px;">
            <a id="btncloselookup" class="btn btn-xs btn-danger">Close</a>
        </div>
        <div>
            <div>
                <div style="">Folder</div>
            </div>
            <div id="folderlist" style="display: block; height: 195px; overflow-y: auto;">

            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
            var rootFolder = "";

            function callback(jsonData) {
                rootFolder = jsonData.rootFolder;

                var tableFolders = document.getElementById('folderlist');
                removeAllChildren(tableFolders);

                for (var row = 0; row < jsonData.folderList.length; row++) {
                    var tableRow = document.createElement('DIV');
                    tableRow.style.display = "table-row";
                    tableRow.className = "row";

                    var cellFolderName = document.createElement('DIV');
                    cellFolderName.style = "table-cell";
                    cellFolderName.className = "cellfoldername";
                    var cellCommands = document.createElement('DIV');
                    cellCommands.style = "table-cell";
                    cellCommands.className = "cellfolderselect";

                    cellFolderName.appendChild(document.createTextNode(jsonData.folderList[row].filename));

                    var actionSelect = document.createElement('A');
                    actionSelect.appendChild(document.createTextNode('Select'));
                    actionSelect.href = 'javascript: selectHandler(\'' + jsonData.folderList[row].filename + '\')';
                    actionSelect.className = 'btn btn-primary btn-xs';

                    cellCommands.appendChild(actionSelect);

                    tableRow.appendChild(cellFolderName);
                    tableRow.appendChild(cellCommands);

                    if (row % 2 == 1) {
                        tableRow.style.backgroundColor = "#EEEEFF";
                    }
                    else {
                        tableRow.style.backgroundColor = "#FFFFFF";
                    }

                    tableFolders.appendChild(tableRow);

                }

            }

            function errorcallback()
            {
                window.alert("Error on Ajax Call");
            }

            function selectHandler(folderName)
            {
                var entryField = document.getElementById('folderPath');
                if (entryField != null)
                {
                    entryField.value = rootFolder.trim() + "\\" + folderName.trim();
                    CloseFolderLookup();
                }
            }

            function OpenFolderLookup() {
                var parentPosX = 0;
                var parentPosY = 0;
                var parentWidth = 0;
                var parentHeight = 0;

                var divModalLookup = document.getElementById('modalLookup')

                if (divModalLookup != null) {
                    var rect = divModalLookup.parentNode.getBoundingClientRect()
                    var parentWidth = rect.right - rect.left;
                    var parentHeight = rect.bottom - rect.top;

                    divModalLookup.style.display = "block";

                    var lookupUrl = '@Url.RouteUrl(new { controller = "Documents", action = "GetFolderList" })'
                    ajax(lookupUrl, null, callback, errorcallback);
                }

            }


            function CloseFolderLookup() {
                var divModalLookup = document.getElementById('modalLookup')
                if (divModalLookup != null) {
                    divModalLookup.style.display = "none";
                }
            }

            function buttonFolderEventHandler (e)
            {
                if (e.target.id == e.currentTarget.id)
                {
                    switch (e.target.id)
                    {
                        case "btnfolderlookup":
                            OpenFolderLookup();
                            break;

                        case "btncloselookup":
                            CloseFolderLookup();
                            break;

                        default:
                            break;
                    }

                    e.stopPropagation();
                }
            }



            document.getElementById('btnfolderlookup').addEventListener('click', buttonFolderEventHandler, false);
            document.getElementById('btncloselookup').addEventListener('click', buttonFolderEventHandler, false);
</script>
